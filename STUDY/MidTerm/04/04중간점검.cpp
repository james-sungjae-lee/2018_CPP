#include <iostream>
using namespace std;

//함수 이름 앞에 void가 있다면?
//어떤 값도 반환하지 않는다는 뜻이다. return이 쓰일 필요가 없다.

// 함수가 작업을 수행하는데 필요한 데이터로서, 외부에서 주어지는 것?
// input : 입력

// 함수 몸체는 어떤 기호로?
// { } 중괄호, 컬리 브레이스, 블록

// 함수의 몸체 안에서 정의되는 변수?
// 지역 변수 , local variable

// 실인수와 형식 매개 변수의 관계는?
// 실인수를 형식 매개 변수로 받아, 함수에서는 형식 매개 변수를 호출한다.
// 또한, 형식 매개변수와 자료형이 같은 경우에만 함수에서 호출할 수 있다.

// 인수와 매개 변수가 값을 주고받는 방법 : 값 / 참조

// 반환값이 실수로 정의된 함수에서 정수값을 반환하면? 실수로
// 정의된 반환값에 따라 출력된다.

// 함수 원형을 사용하지 않으려면 어떻게 하는가?
// 함수를 main함수보다 위에서 정의한다.

// 함수 정의의 첫 번째 줄?
// 함수의 반환 자료형 / 함수의 이름 / 함수의 파라미터 (매개변수)
// 함수의 헤드라고 부른다.

// 함수가 값을 반환하지 않는다면 반환형은 어떻게 정의되는가?
// void

// 함수 정의와 함수 원형의 차이점은?
// 함수 원형 : prototype
// 어떤 함수가 사용될 것인지 미리 알리는 것이 함수 원형.
// 실제로 함수의 내용을 구현하는 것이 함수 정의
// 함수 원형에는 함수의 내용이 구현되어있지 않다.

// 함수 원형에 반드시 필요한 것은 아니지만 대개 매개 변수들의 이름들을 추가하는 이유?
// 가독성 증가?

// double pow(double, double);
// double 자료형의 매개변수를 2개 값의 형태로 받은 다음,
// 함수의 결과값으로 double 자료형을 반환한다.


// 90도에서 사인값을 계산
// #include<cmath>; sin(90);

// rand()%10 이 계산하는 범위 : -9 ~ 9

// 변수의 범위는 무엇으로 결정되는가?
// 변수의 범위는 변수의 생존기간을 의미한다.
// 크게 지역변수와 전역변수 local / global 두 가지로 나뉜다.
// 변수의 범위는 기본적으로 변수가 정의된 위치에 따라 결정된다.

// 파일 범위를 가지는 변수는 전역변수이다.
// 블록 범위를 가지는 변수는 지역변수이다.

// 지역 변수를 블록의 중간에서 정의할 수 있다.

// 같은 이름의 지역 변수가 다른 함수안에 정의될 수 있다.

// 지역 변수가 선언된 블록이 종료되면, 지역 변수는 사라진다.

// 지역 변수의 초기값은 정해지지 않는다.

// 함수의 매개 변수도 지역 변수이다.

// 전역 변수는 함수 및 블록 바깥에서 선언된다.

// 전역 변수의 생존 기간과 초기값은 파일 전체, 0 이다.

// 똑같은 이름의 전역 변수와 지역 변수가 동시에 존재할 수 있지만,
// 지역 변수가 전역 변수를 덮어쓸 수 있다.


// 정적 할당과 자동 할당의 차이점은 변수의 생존 기간을 직접 명시하여 정해주는가의 차이이다.
// 변수에 공간을 할당하는 방법은 저장 유형 지정자를 어떤 것을 사용하느냐에 달려있다.

//저장 유형 지정자에는 auto / static / extern / register 등이 있다.
// 지역 변수를 정적 변수로 만들기 위해서는 static 저장 유형 지정자를 사용한다.

// register / extern
// extern 은 외부의 선언된 변수를 가져올 때 쓴다.
// static ~

// 변수를 하나의 파일에서만 사용할 수 있도록 만드는 키워드는? static

// 변수를 여러 파일에 걸쳐 사용하도록 만드는 키워드는? extern

// 지역 변수들은 외부와 연계가 가능한가?
// 아니오. 외부와 연계가 가능한 변수는 전역변수와 외부 참조 변수뿐이며,
// 이들은 모두 함수 외부에서 정의된다.

// 키워드 extern의 용도는? : 외부 파일의 변수를 사용할 수 있도록 만든다.

// 만약 함수 안에 선언된 정수 변수의 값이 함수 호출 사이에 유지되기를 바란다면
// 어떻게 정의하여야 하는가?
//

// 지역 변수를 프로그램이 실행되는 동안 유지되도록 만드는 키워드 = static 정적 지역 변수






















//
